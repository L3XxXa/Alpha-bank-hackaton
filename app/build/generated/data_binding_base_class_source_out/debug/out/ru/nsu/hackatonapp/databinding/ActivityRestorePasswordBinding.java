// Generated by view binder compiler. Do not edit!
package ru.nsu.hackatonapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.nsu.hackatonapp.R;

public final class ActivityRestorePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText restoreCode;

  @NonNull
  public final EditText restoreConfirmPassword;

  @NonNull
  public final EditText restoreEmail;

  @NonNull
  public final EditText restorePassword;

  @NonNull
  public final Button restorePasswordButton;

  private ActivityRestorePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText restoreCode, @NonNull EditText restoreConfirmPassword,
      @NonNull EditText restoreEmail, @NonNull EditText restorePassword,
      @NonNull Button restorePasswordButton) {
    this.rootView = rootView;
    this.restoreCode = restoreCode;
    this.restoreConfirmPassword = restoreConfirmPassword;
    this.restoreEmail = restoreEmail;
    this.restorePassword = restorePassword;
    this.restorePasswordButton = restorePasswordButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestorePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestorePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_restore_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestorePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.restore_code;
      EditText restoreCode = ViewBindings.findChildViewById(rootView, id);
      if (restoreCode == null) {
        break missingId;
      }

      id = R.id.restore_confirm_password;
      EditText restoreConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (restoreConfirmPassword == null) {
        break missingId;
      }

      id = R.id.restore_email;
      EditText restoreEmail = ViewBindings.findChildViewById(rootView, id);
      if (restoreEmail == null) {
        break missingId;
      }

      id = R.id.restore_password;
      EditText restorePassword = ViewBindings.findChildViewById(rootView, id);
      if (restorePassword == null) {
        break missingId;
      }

      id = R.id.restore_password_button;
      Button restorePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (restorePasswordButton == null) {
        break missingId;
      }

      return new ActivityRestorePasswordBinding((ConstraintLayout) rootView, restoreCode,
          restoreConfirmPassword, restoreEmail, restorePassword, restorePasswordButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
